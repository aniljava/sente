#!/usr/bin/env python2

import sente


def main():
    # test_board()
    test_sgf()

def test_board():
    test_group_joins()
    test_capture()
    test_ko()
    test_group_joins_several()
    test_sgf()
    
    
    
def test_sgf():
    text = '(;B[pd];W[dp];B[cd];W[qp];B[op];W[oq];B[nq];W[pq];B[cn];W[fq];B[mp];W[po];B[iq];W[ec];B[hd];W[cg];B[ed];W[cj];B[dc];W[bp];B[nc];W[qi];B[ep];W[eo];B[dk];W[fp];B[ck];W[dj];B[ej];W[ei];B[fi];W[eh];B[fh];W[bj];B[fk];W[fg];B[gg];W[ff];B[gf];W[mc];B[md];W[lc];B[nb];W[id];B[hc];W[jg];B[pj];W[pi];B[oj];W[oi];B[ni];W[nh];B[mh];W[ng];B[mg];W[mi];B[nj];W[mf];B[li];W[ne];B[nd];W[mj];B[lf];W[mk];B[me];W[nf];B[lh];W[qj];B[kk];W[ik];B[ji];W[gh];B[hj];W[ge];B[he];W[fd];B[fc];W[ki];B[jj];W[lj];B[kh];W[jh];B[ml];W[nk];B[ol];W[ok];B[pk];W[pl];B[qk];W[nl];B[kj];W[ii];B[rk];W[om];B[pg];W[ql];B[cp];W[co];B[oe];W[rl];B[sk];W[rj];B[hg];W[ij];B[km];W[gi];B[fj];W[jl];B[kl];W[gl];B[fl];W[gm];B[ch];W[ee];B[eb];W[bg];B[dg];W[eg];B[en];W[fo];B[df];W[dh];B[im];W[hk];B[bn];W[if];B[gd];W[fe];B[hf];W[ih];B[bh];W[ci];B[ho];W[go];B[or];W[rg];B[dn];W[cq];B[pr];W[qr];B[rf];W[qg];B[qf];W[jc];B[gr];W[sf];B[se];W[sg];B[rd];W[bl];B[bk];W[ak];B[cl];W[hn];B[in];W[hp];B[fr];W[er];B[es];W[ds];B[ah];W[ai];B[kd];W[ie];B[kc];W[kb];B[gk];W[ib];B[qh];W[rh];B[qs];W[rs];B[oh];W[sl];B[of];W[sj];B[ni];W[nj];B[oo];W[jp])'
    game = sente.sgf.from_string(text)
    board = sente.Board(19)
    
    for move in game.main_sequence_iter():
        color, pos = move.get_move()
        intcolor = sente.color(color)
        
        x,y = pos
        
        
        board.move(intcolor ,(y,x))
        
        
        
        print color, move, pos, len(board.sequence)
        print board
        print
        print
        
    print board
    
def test_group_joins():
    print
    print 'Group Join'
    
    board = sente.Board()
    board.move(sente.BLACK, (0,1))
    board.move(sente.BLACK, (1,0))
    board.move(sente.BLACK, (1,1))
    print board
    
def test_group_joins_several():
    print
    print 'Several Group Join Test'
    
    board = sente.Board()
    board.move(sente.BLACK, (0,1))
    board.move(sente.BLACK, (2,1))
    board.move(sente.BLACK, (1,0))
    board.move(sente.BLACK, (1,2))
    
    board.move(sente.BLACK, (1,1))
    print board
    
def test_capture():
    
    print
    print 'Capture Test'
    
    board = sente.Board()
    board.move(sente.WHITE, (0,0))
    board.move(sente.BLACK, (0,1))
    board.move(sente.BLACK, (1,0))
    print board


def test_ko():
    print
    print 'Simple Ko Test'
    
    board = sente.Board()
    board.move(sente.BLACK, (1,0))
    board.move(sente.BLACK, (2,1))
    board.move(sente.WHITE, (3,1))
    board.move(sente.WHITE, (4,0))
    
    board.move(sente.WHITE, (2,0))
    
    board.move(sente.BLACK, (3,0))
    if board.is_legal(sente.WHITE, (2,0))[0]:
        print 'ERROR'
    
    
    board.move(sente.WHITE, (5,5))
    board.move(sente.BLACK, (6,5))
    
    if not board.is_legal(sente.WHITE, (2,0))[0]:
        print 'ERROR'
    print board

main()
